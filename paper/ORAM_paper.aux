\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}}
\citation{C-ORAM}
\citation{OnionORAM}
\citation{TODO}
\citation{TODO}
\@writefile{toc}{\contentsline {section}{\numberline {2}Previous work}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Previous tree-based ORAM schemes}{3}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Ring ORAM access. The circled blocks are selected. The buckets which do not contain the target block (levels 1 and 3) send back a dummy block}}{4}}
\newlabel{fig:ringaccess}{{1}{4}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Reverse lexicographical order balances the tree through standardized evictions.}}{5}}
\newlabel{fig:rlo}{{2}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Onion ORAM}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Onion ORAM Eviction}{6}}
\@writefile{toc}{\contentsline {section}{\numberline {3}C-ORAM}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Accesses}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Evictions}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}Oblivious Mergings}{9}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Two buckets are permuted so ``real" data blocks (in black) are lined up with either noisy blocks (in grey) or $E (0)$ blocks (in white). Thus, merging the two buckets while preserving real data blocks results in no loss of data.}}{10}}
\newlabel{fig:merge}{{3}{10}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Our Contributions}{10}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}Our Results}{10}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces }}{11}}
\newlabel{fig:runtimegraph}{{4}{11}}
\bibstyle{abbrv}
\bibdata{ORAM_paper}
\bibcite{OnionORAM}{1}
\bibcite{C-ORAM}{2}
